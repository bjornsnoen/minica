on:
  release:
    types: [published]

name: "Release"

jobs:
  release-artifacts:
    name: Create release artifacts
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: ["386", amd64, arm]
        exclude:
          - os: windows
            arch: arm
          - os: darwin
            arch: "386"
          - os: darwin
            arch: arm

    steps:
      - uses: actions/checkout@master

      - name: Set up windows cross compilation
        if: ${{ matrix.os == 'windows' }}
        run: |
          echo "CC=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Set up environment for linux i386 dll building
        if: ${{ matrix.os == 'linux' }}
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: compile and release binary
        uses: wangyoucao577/go-release-action@v1.30
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.os }}
          goarch: ${{ matrix.arch }}
          pre_command: "if [[ -v CGO_ENABLED ]]; then apt-get update; if [[ -v CC ]]; then apt-get install -y mingw-w64; else apt-get install -y g++-multilib; fi; fi;"

      - name: compile and release library
        uses: wangyoucao577/go-release-action@v1.30
        if: ${{ matrix.os != 'darwin' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.os }}
          goarch: ${{ matrix.arch }}
          build_flags: "--buildmode=c-shared"
          binary_name: "minica.dll"
          pre_command: "if [[ -v CGO_ENABLED ]]; then apt-get update; if [[ -v CC ]]; then apt-get install -y mingw-w64; else apt-get install -y g++-multilib; fi; fi;"
